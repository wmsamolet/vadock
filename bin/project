#!/bin/bash

function info {
  echo "--------------------------------------------------------------------------------------"
  echo "-"
  echo -e "-  $1"
  echo "-"
  echo "--------------------------------------------------------------------------------------"
  echo
}

echo

#---------------------------------------------------------------------------------------------#

if [ -z ${VDK_PROJECT_NAME} ]
then
    read -p "Enter project name [${VDK_PROJECT_NAME}]: " INPUT
    echo
fi

if [ ! -z ${INPUT} ]
then
    VDK_PROJECT_NAME=${INPUT}
fi

#---------------------------------------------------------------------------------------------#

ACTION=""

if [ ! -z "$1" ]
  then ACTION=$1
else
    read -p "Enter command (build, create, configure, init, deinit): " INPUT
    echo
fi

if [ ! -z ${INPUT} ]
then
    ACTION=${INPUT}
fi

if [ ${ACTION} == "" ]
then
    echo "ERROR: Please enter action name"
    exit 1
fi

#---------------------------------------------------------------------------------------------#

if [ ${ACTION} == "list" ]
then
    info "Project list:"
    printf " %s\n" ./projects/*/
    echo
    exit 1
fi

#---------------------------------------------------------------------------------------------#

VDK_PATH="$( cd "$(dirname "$0")"/../ ; pwd -P )"

VDK_PROJECT_PATH=${VDK_PATH}/projects/${VDK_PROJECT_NAME}

DOCKER_BIN_PATH=${VDK_PATH}/docker/bin

#---------------------------------------------------------------------------------------------#

if [ ${ACTION} == "create" ] || [ ${ACTION} == "build" ]
then
    cp -nR ${VDK_PATH}/docker/project/. ${VDK_PROJECT_PATH}/

    info "Project \"${VDK_PROJECT_NAME}\" created successful! \n-  Please customize projects files by path: ${VDK_PROJECT_PATH}"
fi

#---------------------------------------------------------------------------------------------#

if [ ${ACTION} == "conf" ] || [ ${ACTION} == "configure" ] || [ ${ACTION} == "create" ] || [ ${ACTION} == "build" ]
then
    info "Configure project \"${VDK_PROJECT_NAME}\""

    source ${VDK_PROJECT_PATH}/.env

    VAR_ENV_NAMES=()

    while IFS='' read -r line || [[ -n "$line" ]]; do
        if [[ $line =~ ^[A-Z\_]+\= ]] ;
        then
            VDK_ENV_NAME=$(echo $line | cut -f1 -d '=')
            VDK_ENV_NAMES+=(${VDK_ENV_NAME})
        fi
    done < ${VDK_PROJECT_PATH}/.env

    for VDK_ENV_NAME in "${VDK_ENV_NAMES[@]}"; do

        VDK_ENV_VAR="$VDK_ENV_NAME"
        VDK_ENV_VALUE=${!VDK_ENV_VAR}

        read -p "Enter valuer for \"${VDK_ENV_NAME}\" [${VDK_ENV_VALUE}]: " VDK_ENV_VALUE_INPUT

        if [ ! -z ${VDK_ENV_VALUE_INPUT} ]
        then
            VDK_ENV_VALUE=${VDK_ENV_VALUE_INPUT}
        fi

        search="${VDK_ENV_NAME}=.*"
        replace="${VDK_ENV_NAME}=${VDK_ENV_VALUE}"
        sed -i -- "s|${search}|${replace}|g" ${VDK_PROJECT_PATH}/.env
    done

    echo
fi

#---------------------------------------------------------------------------------------------#

if [ ${ACTION} == "init" ] || [ ${ACTION} == "deinit" ] || [ ${ACTION} == "build" ]
then
    source ${VDK_PROJECT_PATH}/.env

    ACTION_BIN="${ACTION}"

    if [ ${ACTION} == "build" ]
    then
        ACTION_BIN=init
    fi

    #
    # Init network
    #

    ${DOCKER_BIN_PATH}/init-network ${VDK_NETWORK_NAME}

    #
    # Init project compose files
    #

    if [ ! -z "$2" ]
    then
        COMPOSE_FILE_NAME=$2
        ${DOCKER_BIN_PATH}/${ACTION_BIN} ${VDK_PROJECT_NAME} ${COMPOSE_FILE_NAME}
    else
        IFS=',' read -ra COMPOSE_FILE_NAMES <<< "${VDK_COMPOSE_LIST}"

        for COMPOSE_FILE_NAME in "${COMPOSE_FILE_NAMES[@]}"; do
            ${DOCKER_BIN_PATH}/${ACTION_BIN} ${VDK_PROJECT_NAME} ${COMPOSE_FILE_NAME}
        done
    fi
fi

#---------------------------------------------------------------------------------------------#

if [ ${ACTION} == "create" ]
then
    ${VDK_PATH}/bin/host create ${VDK_PROJECT_NAME}
fi

echo "----------------------------------------------------------------------------------------"
echo